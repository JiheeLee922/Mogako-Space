plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	//querydsl
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.jihee'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
}


ext {
    set('springCloudVersion', "Greenwich.SR1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'junit:junit:4.12'
	compileOnly 'org.projectlombok:lombok'
	implementation 'javax.servlet:jstl:1.2'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	runtimeOnly 'mysql:mysql-connector-java'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.mariadb.jdbc:mariadb-java-client:2.1.2"
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
//	implementation 'org.springframework.security:spring-security-taglibs'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    
    implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws'
    implementation 'org.springframework.cloud:spring-cloud-starter-function-web'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.1.0'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-reactor-netty', version: '2.4.6'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.12.4'
	implementation group: 'org.webjars', name: 'sockjs-client', version: '1.1.2'
	implementation 'com.querydsl:querydsl-jpa'
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.0'
	
}

test {
    useJUnitPlatform()
}

task buildZip(type: Zip) {
    from compileJava  			//�븿�닔�쓽 �겢�옒�뒪瑜� 而댄뙆�씪
    from processResources		//Java �봽濡쒖젥�듃 由ъ냼�뒪瑜� ���긽 �뵒�젆�꽣由ъ뿉 蹂듭궗�븯怨� �옞�옱�쟻�쑝濡� 泥섎━
    into('lib') {				//鍮뚮뱶�쓽 �겢�옒�뒪 寃쎈줈�뿉�꽌 lib�씪�뒗 �뤃�뜑濡� 醫낆냽�꽦 �씪�씠釉뚮윭由щ�� 蹂듭궗
        from configurations.runtimeClasspath
    }
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


//querydsl �꽕�젙
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl �걹

//build.dependsOn buildZip



